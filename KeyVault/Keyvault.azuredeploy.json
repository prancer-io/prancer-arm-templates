{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of the KeyVault"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location of the Keyvault Deploy"
            }
        },
        "sku": {
            "type": "string",
            "metadata": {
                "description": "Mentioned the SKU of the azure Keyvault"
            }
        },
        "accessPolicies": {
            "type": "array"
        },
        "tenant": {
            "type": "string"
        },
        "enabledForDeployment": {
            "type": "bool",
            "metadata": {
                "description": "Enable for Azure Virtual Machines for deployment"
            }
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "metadata": {
                "description": "Enable Azure Resource Manager for template deployment"
            }
        },
        "enabledForDiskEncryption": {
            "type": "bool",
            "metadata": {
                "description": "Enable for Azure Disk Encryption for volume encryption"
            }
        },
        "enableRbacAuthorization": {
            "type": "bool",
            "metadata": {
                "description": "Enable RBAC authntication for the keyvault access"
            }
        },
        "enableSoftDelete": {
            "type": "bool"
        },
        "softDeleteRetentionInDays": {
            "type": "int"
        },
        "networkAcls": {
            "type": "object"
        },
        "secretName": {
            "type": "securestring",
            "metadata": {
                "description": "Value for the Secrets to be store"
            }
        },
        "secretValue": {
            "type": "securestring",
            "metadata": {
                "description": "Value for the Secrets to be store"
            }
        },
        "logsRetentionInDays": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 365,
            "metadata": {
                "description": "Specifies the number of days that logs are gonna be kept. If you do not want to apply any retention policy and retain data forever, set value to 0."
            }
        },
        "keyName": {
            "type": "string",
            "defaultValue": "GEN-UNIQUE",
            "metadata": {
                "description": "Specifies the name of the key to be created."
            }
        },
        "attributes": {
            "type": "object",
            "defaultValue": {
                "enabled": false,
                "nbf": 1585206000,
                "exp": 1679814000
            },
            "metadata": {
                "description": "The attributes of a key managed by the key vault service."
            }
        },
        "key_ops": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "JSON web key operations. Operations include: 'encrypt', 'decrypt', 'sign', 'verify', 'wrapKey', 'unwrapKey'"
            }
        },
        "key_size": {
            "type": "int",
            "defaultValue": 4096,
            "metadata": {
                "description": "The key size in bits. For example: 2048, 3072, or 4096 for RSA."
            }
        },
        "kty": {
            "type": "string",
            "defaultValue": "RSA",
            "allowedValues": [
                "EC",
                "EC-HSM",
                "RSA",
                "RSA-HSM"
            ],
            "metadata": {
                "description": "The type of key to create"
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags to be assigned to the Key."
            }
        }
    },
    "variables": {
        "uniqueString": "[uniqueString(subscription().id, resourceGroup().id)]",
        "diagnosticStorageAccountName": "[toLower( substring( replace( concat( parameters('keyVaultName'), variables('uniqueString'), variables('uniqueString') ), '-', ''), 0, 23) )]"
    },
    "resources": [
        {
            "apiVersion": "2018-02-14",
            "name": "[parameters('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.KeyVault/vaults",
            "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enableRbacAuthorization": "[parameters('enableRbacAuthorization')]",
                "accessPolicies": "[parameters('accessPolicies')]",
                "tenantId": "[parameters('tenant')]",
                "sku": {
                    "name": "[parameters('sku')]",
                    "family": "A"
                },
                "enableSoftDelete": "[parameters('enableSoftDelete')]",
                "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
                "networkAcls": "[parameters('networkAcls')]"
            },
            "tags": {},
            "dependsOn": []
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('secretName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('secretValue')]",
                "attributes": {
                    "enabled": true,
                    "exp": 1654345497
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('secretName'), '-default')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('secretValue')]",
                "attributes": {
                    "enabled": true,
                    "exp": 1654345497
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/providers/diagnosticsettings",
            "name": "[concat(parameters('keyVaultName'), '/Microsoft.Insights/service')]",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName'))]"
            ],
            "properties": {
                "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName'))]",
                "logs": [
                    {
                        "category": "AuditEvent",
                        "enabled": false,
                        "retentionPolicy": {
                            "enabled": false,
                            "days": "[parameters('LogsRetentionInDays')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/keys",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('keyName'))]",
            "tags": "[parameters('tags')]",
            "properties": {
                "attributes": "[parameters('attributes')]",
                "kty": "[parameters('kty')]",
                "key_ops": "[parameters('key_ops')]",
                "key_size": "[parameters('key_size')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/keys",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('keyName'), '-default')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "kty": "[parameters('kty')]",
                "key_ops": "[parameters('key_ops')]",
                "key_size": "[parameters('key_size')]"
            }
        }
    ],
    "outputs": {}
}